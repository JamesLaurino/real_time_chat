Milestone 4 : Persistance des messages et conversations

Contexte :
Je veux stocker les conversations et les messages dans MySQL.

Tâches :
- Créer tables :
  - conversations (id, user1_id, user2_id, created_at)
  - messages (id, conversation_id, sender_id, content, created_at)
- Créer ConversationModel avec méthodes :
  - findOrCreateConversation(user1Id, user2Id)
  - getUserConversations(userId)
- Créer MessageModel avec méthodes :
  - createMessage(conversationId, senderId, content)
  - getMessagesByConversation(conversationId)
- Créer MessageService avec logique :
  - envoyerMessage(userId, destinataireId, contenu)
    → créer/chercher conversation
    → insérer message
    → émettre au destinataire si online
- Créer API REST :
  - GET /conversations → liste des conversations de l’utilisateur
  - GET /conversations/:id/messages → historique des messages
- Intégrer sockets :
  - event "send_message" {toUserId, content}
  - sauvegarde en DB + envoi temps réel au destinataire

Contraintes :
- Respecter le style défini dans `.gemini/style.md`.
- Toujours persister avant d’envoyer.
- Si destinataire offline → pas d’erreur, juste DB.
