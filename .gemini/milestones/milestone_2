Milestone 2 : Authentification (signup/login)

Contexte :
Je veux gérer l’inscription et la connexion des utilisateurs.

Tâches :
- Installer bcryptjs et jsonwebtoken.
- Créer table `users` (id, username, email, password_hash, created_at).
- Créer UserModel avec méthodes :
  - create(user)
  - findByEmail(email)
  - findById(id)
- Créer AuthService avec logique :
  - signup (hash password, enregistrer en DB, retourner user sans password)
  - login (vérifier email + password, générer JWT avec expiration 1h).
- Créer AuthController avec routes :
  - POST /auth/signup
  - POST /auth/login
- Créer middleware auth.js qui valide le JWT et attache userId à req.
- Retourner des réponses JSON standardisées {success, data} ou {success, error}.

Contraintes :
- Respecter le style défini dans `.gemini/style.md`.
- Utiliser async/await.
- Ne jamais stocker mot de passe en clair.
